[{"/Users/steph/IMDB/movie-app/src/index.js":"1","/Users/steph/IMDB/movie-app/src/App.js":"2","/Users/steph/IMDB/movie-app/src/reportWebVitals.js":"3","/Users/steph/IMDB/movie-app/src/components/PublicNavbar.js":"4","/Users/steph/IMDB/movie-app/src/pages/HomePage.js":"5","/Users/steph/IMDB/movie-app/src/components/SearchForm.js":"6","/Users/steph/IMDB/movie-app/src/apiService.js":"7","/Users/steph/IMDB/movie-app/src/components/PaginationBar.js":"8","/Users/steph/IMDB/movie-app/src/components/MovieCard.js":"9","/Users/steph/IMDB/movie-app/src/components/MovieCarousel.js":"10","/Users/steph/IMDB/movie-app/src/pages/MovieDetails.js":"11","/Users/steph/IMDB/movie-app/src/pages/ShowingNow.js":"12","/Users/steph/IMDB/movie-app/src/pages/GenrePage.js":"13","/Users/steph/IMDB/movie-app/src/pages/UpcomingPage.js":"14","/Users/steph/IMDB/movie-app/src/components/useFetchData.js":"15","/Users/steph/IMDB/movie-app/src/components/Footer.js":"16","/Users/steph/IMDB/movie-app/src/pages/TopRated.js":"17","/Users/steph/IMDB/movie-app/src/pages/Query.js":"18"},{"size":589,"mtime":1607324438868,"results":"19","hashOfConfig":"20"},{"size":2537,"mtime":1607325300564,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":1606988395042,"results":"22","hashOfConfig":"20"},{"size":1709,"mtime":1607325233998,"results":"23","hashOfConfig":"20"},{"size":1880,"mtime":1607328669198,"results":"24","hashOfConfig":"20"},{"size":847,"mtime":1607325252055,"results":"25","hashOfConfig":"20"},{"size":1317,"mtime":1607328157294,"results":"26","hashOfConfig":"20"},{"size":1690,"mtime":1607181169711,"results":"27","hashOfConfig":"20"},{"size":2593,"mtime":1607325063300,"results":"28","hashOfConfig":"20"},{"size":1979,"mtime":1607325269611,"results":"29","hashOfConfig":"20"},{"size":4645,"mtime":1607325193410,"results":"30","hashOfConfig":"20"},{"size":1952,"mtime":1607328233400,"results":"31","hashOfConfig":"20"},{"size":2691,"mtime":1607329081657,"results":"32","hashOfConfig":"20"},{"size":2014,"mtime":1607329071652,"results":"33","hashOfConfig":"20"},{"size":997,"mtime":1607238425436,"results":"34","hashOfConfig":"20"},{"size":302,"mtime":1607267875493,"results":"35","hashOfConfig":"20"},{"size":2034,"mtime":1607328237856,"results":"36","hashOfConfig":"20"},{"size":2255,"mtime":1607325617121,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1y0vyo5",{"filePath":"41","messages":"42","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"40"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"/Users/steph/IMDB/movie-app/src/index.js",[],["79","80"],"/Users/steph/IMDB/movie-app/src/App.js",["81","82","83","84"],"import React, { useEffect } from \"react\";\nimport \"./App.css\";\nimport {\n  BrowserRouter as Router,\n  Redirect,\n  Route,\n  Switch,\n  useHistory,\n} from \"react-router-dom\";\nimport PublicNavbar from \"./components/PublicNavbar\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport HomePage from \"./pages/HomePage\";\nimport TopRated from \"./pages/TopRated\";\nimport ShowingNow from \"./pages/ShowingNow\";\nimport UpcomingPage from \"./pages/UpcomingPage\";\nimport { useState } from \"react\";\nimport api from \"./apiService\";\nimport MovieDetails from \"./pages/MovieDetails\";\nimport GenrePage from \"./pages/GenrePage\";\nimport QueryPage from \"./pages/Query\";\n// import Query from \"./pages/Query\";\n\nfunction App() {\n  const [loading, setLoading] = useState(false);\n  const [searchInput, setSearchInput] = useState(\"\");\n  const [query, setQuery] = useState(\"\");\n  const [errorMsg, setErrorMsg] = useState(\"\");\n  const [genreList, setGenreList] = useState([]);\n  const history = useHistory();\n\n  const handleSearchChange = (e) => {\n    setSearchInput(e.target.value);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    setQuery(searchInput);\n\n    // setSearchInput(\"\");\n  };\n\n  useEffect(() => {\n    history.push(\"/query\");\n  }, [query, history]);\n\n  useEffect(() => {\n    const fetchGenreList = async () => {\n      try {\n        const res = await api.get(`/genre/movie/list?language=en-US`);\n        // console.log(\"genre\", res.data.genres);\n        setGenreList(res.data.genres);\n        setErrorMsg(\"\");\n      } catch (error) {\n        setErrorMsg(error.message);\n      }\n    };\n    fetchGenreList();\n  }, []);\n  // console.log(genreList);\n\n  return (\n    // <div style={{ backgroundColor: loading ? \"#fff\" : \"#000\" }}>\n    <>\n      <PublicNavbar\n        loading={loading}\n        searchInput={searchInput}\n        handleSearchChange={handleSearchChange}\n        handleSubmit={handleSubmit}\n        genreList={genreList}\n      />\n      <Switch>\n        <Route exact path=\"/\" component={HomePage} />\n        <Route exact path=\"/top_rated\" component={TopRated} />\n        <Route\n          exact\n          path=\"/query\"\n          render={(props) => <QueryPage {...props} query={query} />}\n        />\n        <Route exact path=\"/showing_now\" component={ShowingNow} />\n        <Route exact path=\"/upcoming\" component={UpcomingPage} />\n        <Route exact path=\"/movies/:id\" component={MovieDetails} />\n        <Route exact path=\"/genres/:id\" component={GenrePage} />\n      </Switch>\n    </>\n    // </div>\n  );\n}\n\nexport default App;\n","/Users/steph/IMDB/movie-app/src/reportWebVitals.js",[],"/Users/steph/IMDB/movie-app/src/components/PublicNavbar.js",[],"/Users/steph/IMDB/movie-app/src/pages/HomePage.js",["85","86","87","88"],"/Users/steph/IMDB/movie-app/src/components/SearchForm.js",[],"/Users/steph/IMDB/movie-app/src/apiService.js",[],"/Users/steph/IMDB/movie-app/src/components/PaginationBar.js",[],"/Users/steph/IMDB/movie-app/src/components/MovieCard.js",["89"],"import React from \"react\";\nimport { CardDeck, Card } from \"react-bootstrap\";\n\nconst API_KEY = process.env.REACT_APP_API_KEY;\n\nlet genreList = {\n  genres: [\n    { id: 28, name: \"Action\" },\n    { id: 12, name: \"Adventure\" },\n    { id: 16, name: \"Animation\" },\n    { id: 35, name: \"Comedy\" },\n    { id: 80, name: \"Crime\" },\n    { id: 99, name: \"Documentary\" },\n    { id: 18, name: \"Drama\" },\n    { id: 10751, name: \"Family\" },\n    { id: 14, name: \"Fantasy\" },\n    { id: 36, name: \"History\" },\n    { id: 27, name: \"Horror\" },\n    { id: 10402, name: \"Music\" },\n    { id: 9648, name: \"Mystery\" },\n    { id: 10749, name: \"Romance\" },\n    { id: 878, name: \"Science Fiction\" },\n    { id: 10770, name: \"TV Movie\" },\n    { id: 53, name: \"Thriller\" },\n    { id: 10752, name: \"War\" },\n    { id: 37, name: \"Western\" },\n  ],\n};\n\nconst MovieCard = ({ movie, handleClick }) => {\n  return (\n    <CardDeck\n      border=\"info\"\n      style={{ width: \"20rem\" }}\n      // flex=\"nowrap\"\n      className=\"flex-nowrap\"\n    >\n      <EachMovie key={movie.id} movie={movie} handleClick={handleClick} />\n      <div\n        className=\"round-badge\"\n        style={{ marginTop: \"400px\", marginLeft: \"240px\" }}\n      >\n        {movie.vote_average * 10}%\n      </div>\n    </CardDeck>\n  );\n};\n\nconst EachMovie = ({ movie, handleClick }) => {\n  // console.log(movie);\n  if (!movie) return;\n  // console.log(movie.genre_ids);\n\n  // let genres = genreList.genres.filter((id) => {\n  //   return movie.genre_ids === id;\n  // });\n  // console.log(genres);\n\n  return (\n    <Card\n      className=\"mr-5 mt-5 position-relative\"\n      as=\"li\"\n      border=\"secondary\"\n      onClick={() => handleClick(movie.id)}\n    >\n      <div className=\"hover-thing position-absolute\">\n        <div\n          className=\"text-left movie_overview p-3\"\n          style={{ overflowY: \"scroll\" }}\n        >\n          <strong>{movie.title}</strong> <br />\n          {movie.overview}\n        </div>\n      </div>\n      <Card.Img\n        variant=\"top\"\n        src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}?api_key=${API_KEY}`}\n        alt={`${movie.title} Poster`}\n      />\n\n      <Card.Footer className=\"footer-text\">\n        <Card.Text>\n          <strong>Rating: {movie.vote_average}/10 </strong>\n          <small>from {movie.vote_count} votes</small>\n        </Card.Text>\n        <hr />\n        <Card.Text>\n          <small>{movie.genre_ids[0]?.name}</small>\n        </Card.Text>\n        <Card.Text>\n          <strong>Released:</strong> {movie.release_date}\n        </Card.Text>\n      </Card.Footer>\n    </Card>\n  );\n};\n\nexport default MovieCard;\n","/Users/steph/IMDB/movie-app/src/components/MovieCarousel.js",[],"/Users/steph/IMDB/movie-app/src/pages/MovieDetails.js",["90"],"import React, { useEffect, useState } from \"react\";\nimport { Col, Container, Row } from \"react-bootstrap\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport api from \"../apiService\";\nimport ReactPlayer from \"react-player\";\nimport { PacmanLoader } from \"react-spinners\";\n\nconst API_KEY = process.env.REACT_APP_API_KEY;\n// https://api.themoviedb.org/3/movie/550?api_key=da56a28f70258600c442ac848facc1e8&language=en-US\n\nconst MovieDetails = () => {\n  const params = useParams();\n  const [errorMsg, setErrorMsg] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [movie, setMovie] = useState([]);\n  const [videoInfo, setVideoInfo] = useState(\"\");\n  const [recsList, setRecsList] = useState([]);\n  const [isBgDark, setIsBgDark] = useState(false);\n\n  const history = useHistory();\n\n  const handleClick = (movieid) => {\n    history.push(`/movies/${movieid}`);\n  };\n\n  // console.log(\"LOKK\", params.id);\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      try {\n        const movieRes = await api.get(`/movie/${params.id}?language=en-US`);\n        console.log(\"movie\", movieRes.data);\n        setMovie(movieRes.data);\n\n        const videoResult = await api.get(`/movie/${params.id}/videos`);\n        console.log(\"videos\", videoResult.data.results);\n        setVideoInfo(videoResult.data.results[0]);\n\n        const recsRes = await api.get(\n          `/movie/${params.id}/recommendations?language=en-US`\n        );\n        console.log(\"recs\", recsRes.data.results);\n        setRecsList(recsRes.data.results);\n        setErrorMsg(\"\");\n      } catch (error) {\n        setErrorMsg(`FETCH ERROR: ${error.message}`);\n      }\n      setLoading(false);\n    };\n    fetchData();\n  }, [params]);\n\n  // console.log(\"details\", movie);\n  return (\n    <div\n      // style={{\n      //   backgroundColor: isBgDark ? \"#000\" : \"#fff\",\n      // }}\n      style={{\n        backgroundColor: \"#000\",\n        color: \"#fff\",\n        height: \"vh\",\n      }}\n    >\n      <Container className=\"d-flex text-center justify-content-center\">\n        {errorMsg && <div>{errorMsg}</div>}\n        <br />\n        {loading ? (\n          <div className=\"mt-5 pt-5\">\n            <PacmanLoader color=\"#FFFF00\" size={50} loading={true} />\n          </div>\n        ) : (\n          <div className=\"d-flex flex-wrap\">\n            {videoInfo?.key ? (\n              <div\n                className=\"player-wrapper\"\n                style={{ position: \"relative\", width: \"100vw\" }}\n              >\n                <ReactPlayer\n                  className=\"react-player\"\n                  style={{\n                    position: \"absolute\",\n                    marginLeft: \"auto\",\n                    marginRight: \"auto\",\n                    left: 0,\n                    right: 0,\n                  }}\n                  url={`https://www.youtube.com/watch?v=${videoInfo?.key}`}\n                  width=\"1280px\"\n                  height=\"720px\"\n                  onPlay={() => setIsBgDark(true)}\n                  onPause={() => setIsBgDark(false)}\n                />\n              </div>\n            ) : (\n              <h1 className=\"justify-conent-center align-content-center\">\n                No Trailer\n              </h1>\n            )}\n            <br />\n            <Container>\n              <Row className=\"video-info\">\n                <Col>\n                  <h2>{videoInfo?.name}</h2>\n                </Col>\n              </Row>\n              <Row>\n                <Col>\n                  <h3>{movie?.tagline}</h3>\n                  <p>{movie?.overview}</p>\n                </Col>\n              </Row>\n            </Container>\n            <Container className=\"mt-5\">\n              <h2 className=\"recommend\">More like this:</h2>\n              <ul\n                className=\"list-unstyled d-flex justify-content-center zoom\"\n                style={{ overflowX: \"scroll\", overflowY: \"hidden\" }}\n              >\n                <br />\n                {recsList?.map((movie) => {\n                  return (\n                    <li>\n                      <img\n                        className=\"zoom\"\n                        height=\"200px\"\n                        variant=\"top\"\n                        src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}?api_key=${API_KEY}`}\n                        alt={`${movie.title} Poster`}\n                        onClick={() => handleClick(movie.id)}\n                      />\n                    </li>\n                  );\n                })}\n              </ul>\n            </Container>\n          </div>\n        )}\n      </Container>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","/Users/steph/IMDB/movie-app/src/pages/ShowingNow.js",[],"/Users/steph/IMDB/movie-app/src/pages/GenrePage.js",["91"],"/Users/steph/IMDB/movie-app/src/pages/UpcomingPage.js",["92"],"/Users/steph/IMDB/movie-app/src/components/useFetchData.js",["93","94"],"/Users/steph/IMDB/movie-app/src/components/Footer.js",[],["95","96"],"/Users/steph/IMDB/movie-app/src/pages/TopRated.js",[],"/Users/steph/IMDB/movie-app/src/pages/Query.js",[],{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","severity":1,"message":"102","line":4,"column":20,"nodeType":"103","messageId":"104","endLine":4,"endColumn":26},{"ruleId":"101","severity":1,"message":"105","line":5,"column":3,"nodeType":"103","messageId":"104","endLine":5,"endColumn":11},{"ruleId":"101","severity":1,"message":"106","line":24,"column":19,"nodeType":"103","messageId":"104","endLine":24,"endColumn":29},{"ruleId":"101","severity":1,"message":"107","line":27,"column":10,"nodeType":"103","messageId":"104","endLine":27,"endColumn":18},{"ruleId":"101","severity":1,"message":"108","line":4,"column":10,"nodeType":"103","messageId":"104","endLine":4,"endColumn":19},{"ruleId":"101","severity":1,"message":"109","line":4,"column":21,"nodeType":"103","messageId":"104","endLine":4,"endColumn":24},{"ruleId":"101","severity":1,"message":"110","line":5,"column":22,"nodeType":"103","messageId":"104","endLine":5,"endColumn":31},{"ruleId":"101","severity":1,"message":"111","line":12,"column":7,"nodeType":"103","messageId":"104","endLine":12,"endColumn":14},{"ruleId":"101","severity":1,"message":"112","line":6,"column":5,"nodeType":"103","messageId":"104","endLine":6,"endColumn":14},{"ruleId":"101","severity":1,"message":"113","line":18,"column":10,"nodeType":"103","messageId":"104","endLine":18,"endColumn":18},{"ruleId":"101","severity":1,"message":"111","line":9,"column":7,"nodeType":"103","messageId":"104","endLine":9,"endColumn":14},{"ruleId":"101","severity":1,"message":"111","line":10,"column":7,"nodeType":"103","messageId":"104","endLine":10,"endColumn":14},{"ruleId":"101","severity":1,"message":"114","line":1,"column":8,"nodeType":"103","messageId":"104","endLine":1,"endColumn":13},{"ruleId":"101","severity":1,"message":"115","line":8,"column":19,"nodeType":"103","messageId":"104","endLine":8,"endColumn":29},{"ruleId":"97","replacedBy":"116"},{"ruleId":"99","replacedBy":"117"},"no-native-reassign",["118"],"no-negated-in-lhs",["119"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","'setLoading' is assigned a value but never used.","'errorMsg' is assigned a value but never used.","'Container' is defined but never used.","'Row' is defined but never used.","'useParams' is defined but never used.","'API_KEY' is assigned a value but never used.","'genreList' is assigned a value but never used.","'isBgDark' is assigned a value but never used.","'React' is defined but never used.","'setPageNum' is assigned a value but never used.",["118"],["119"],"no-global-assign","no-unsafe-negation"]