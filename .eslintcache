[{"/Users/steph/IMDB/movie-app/src/index.js":"1","/Users/steph/IMDB/movie-app/src/App.js":"2","/Users/steph/IMDB/movie-app/src/reportWebVitals.js":"3","/Users/steph/IMDB/movie-app/src/components/PublicNavbar.js":"4","/Users/steph/IMDB/movie-app/src/pages/HomePage.js":"5","/Users/steph/IMDB/movie-app/src/components/SearchForm.js":"6","/Users/steph/IMDB/movie-app/src/apiService.js":"7","/Users/steph/IMDB/movie-app/src/components/PaginationBar.js":"8","/Users/steph/IMDB/movie-app/src/components/MovieCard.js":"9","/Users/steph/IMDB/movie-app/src/components/MovieCarousel.js":"10","/Users/steph/IMDB/movie-app/src/pages/MovieDetails.js":"11","/Users/steph/IMDB/movie-app/src/pages/ShowingNow.js":"12","/Users/steph/IMDB/movie-app/src/pages/GenrePage.js":"13","/Users/steph/IMDB/movie-app/src/pages/UpcomingPage.js":"14","/Users/steph/IMDB/movie-app/src/components/useFetchData.js":"15","/Users/steph/IMDB/movie-app/src/components/Footer.js":"16","/Users/steph/IMDB/movie-app/src/pages/TopRated.js":"17","/Users/steph/IMDB/movie-app/src/pages/Query.js":"18"},{"size":500,"mtime":1606988395040,"results":"19","hashOfConfig":"20"},{"size":2510,"mtime":1607314204367,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":1606988395042,"results":"22","hashOfConfig":"20"},{"size":1709,"mtime":1607304490762,"results":"23","hashOfConfig":"20"},{"size":1904,"mtime":1607183376160,"results":"24","hashOfConfig":"20"},{"size":861,"mtime":1607304476945,"results":"25","hashOfConfig":"20"},{"size":1256,"mtime":1607020783129,"results":"26","hashOfConfig":"20"},{"size":1690,"mtime":1607181169711,"results":"27","hashOfConfig":"20"},{"size":3018,"mtime":1607244078571,"results":"28","hashOfConfig":"20"},{"size":1993,"mtime":1607268914716,"results":"29","hashOfConfig":"20"},{"size":4643,"mtime":1607271239688,"results":"30","hashOfConfig":"20"},{"size":2016,"mtime":1607184111003,"results":"31","hashOfConfig":"20"},{"size":2710,"mtime":1607311072694,"results":"32","hashOfConfig":"20"},{"size":2097,"mtime":1607243073913,"results":"33","hashOfConfig":"20"},{"size":997,"mtime":1607238425436,"results":"34","hashOfConfig":"20"},{"size":302,"mtime":1607267875493,"results":"35","hashOfConfig":"20"},{"size":2098,"mtime":1607268486826,"results":"36","hashOfConfig":"20"},{"size":2453,"mtime":1607306254737,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1y0vyo5",{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/steph/IMDB/movie-app/src/index.js",[],["79","80"],"/Users/steph/IMDB/movie-app/src/App.js",["81","82"],"/Users/steph/IMDB/movie-app/src/reportWebVitals.js",[],"/Users/steph/IMDB/movie-app/src/components/PublicNavbar.js",[],"/Users/steph/IMDB/movie-app/src/pages/HomePage.js",["83","84","85"],"import React from \"react\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { Container, Row } from \"react-bootstrap\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport api from \"../apiService\";\nimport MovieCard from \"../components/MovieCard\";\nimport MovieCarousel from \"../components/MovieCarousel\";\nimport PaginationBar from \"../components/PaginationBar\";\n\n// const BACKEND_API = process.env.REACT_APP_BACKEND_API;\nconst API_KEY = \"da56a28f70258600c442ac848facc1e8\";\n\nconst HomePage = () => {\n  const [movies, setMovies] = useState([]);\n\n  const [pageNum, setPageNum] = useState(1);\n  const [totalPageNum, setTotalPageNum] = useState(1);\n  const [errorMsg, setErrorMsg] = useState(\"\");\n\n  const history = useHistory();\n\n  const handleClick = (movieid) => {\n    history.push(`/movies/${movieid}`);\n  };\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        const res = await api.get(\n          `/movie/popular?api_key=${API_KEY}&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=${pageNum}`\n        );\n        setMovies(res.data.results);\n        setTotalPageNum(res.data.total_pages);\n        setErrorMsg(\"\");\n      } catch (error) {\n        setErrorMsg(error.message);\n      }\n    };\n    fetchMovies();\n  }, [pageNum]);\n\n  return (\n    <div\n      style={{\n        backgroundColor: \"#000\",\n      }}\n    >\n      {errorMsg && <div>{errorMsg}</div>}\n      {movies.length > 0 ? <MovieCarousel movies={movies} /> : \"\"}\n      <ul className=\"list-unstyled d-flex flex-wrap justify-content-center zoom\">\n        {movies.map((movie) => (\n          <MovieCard key={movie.id} movie={movie} handleClick={handleClick} />\n        ))}\n      </ul>\n      <PaginationBar\n        pageNum={pageNum}\n        setPageNum={setPageNum}\n        totalPageNum={totalPageNum}\n      />\n    </div>\n  );\n};\n\nexport default HomePage;\n","/Users/steph/IMDB/movie-app/src/components/SearchForm.js",[],"/Users/steph/IMDB/movie-app/src/apiService.js",[],"/Users/steph/IMDB/movie-app/src/components/PaginationBar.js",[],"/Users/steph/IMDB/movie-app/src/components/MovieCard.js",["86"],"import React from \"react\";\nimport { CardDeck, Card } from \"react-bootstrap\";\n\nconst API_KEY = \"da56a28f70258600c442ac848facc1e8\";\n\n// let genreList = {\n//   28: \"action\",\n//   16: \"animated\",\n//   99: \"documentary\",\n//   18: \"drama\",\n//   10751: \"family\",\n//   14: \"fantasy\",\n//   36: \"history\",\n//   35: \"comedy\",\n//   10752: \"war\",\n//   80: \"crime\",\n//   10402: \"music\",\n//   9648: \"mystery\",\n//   10749: \"romance\",\n//   878: \"sci fi\",\n//   27: \"horror\",\n//   10770: \"TV movie\",\n//   53: \"thriller\",\n//   37: \"western\",\n//   12: \"adventure\",\n// };\n\nlet genreList = {\n  genres: [\n    { id: 28, name: \"Action\" },\n    { id: 12, name: \"Adventure\" },\n    { id: 16, name: \"Animation\" },\n    { id: 35, name: \"Comedy\" },\n    { id: 80, name: \"Crime\" },\n    { id: 99, name: \"Documentary\" },\n    { id: 18, name: \"Drama\" },\n    { id: 10751, name: \"Family\" },\n    { id: 14, name: \"Fantasy\" },\n    { id: 36, name: \"History\" },\n    { id: 27, name: \"Horror\" },\n    { id: 10402, name: \"Music\" },\n    { id: 9648, name: \"Mystery\" },\n    { id: 10749, name: \"Romance\" },\n    { id: 878, name: \"Science Fiction\" },\n    { id: 10770, name: \"TV Movie\" },\n    { id: 53, name: \"Thriller\" },\n    { id: 10752, name: \"War\" },\n    { id: 37, name: \"Western\" },\n  ],\n};\n\nconst MovieCard = ({ movie, handleClick }) => {\n  return (\n    <CardDeck\n      border=\"info\"\n      style={{ width: \"20rem\" }}\n      // flex=\"nowrap\"\n      className=\"flex-nowrap\"\n    >\n      <EachMovie key={movie.id} movie={movie} handleClick={handleClick} />\n      <div\n        className=\"round-badge\"\n        style={{ marginTop: \"400px\", marginLeft: \"240px\" }}\n      >\n        {movie.vote_average * 10}%\n      </div>\n    </CardDeck>\n  );\n};\n\nconst EachMovie = ({ movie, handleClick }) => {\n  // console.log(movie);\n  if (!movie) return;\n  // console.log(movie.genre_ids);\n\n  // let genres = genreList.genres.filter((id) => {\n  //   return movie.genre_ids === id;\n  // });\n  // console.log(genres);\n\n  return (\n    <Card\n      className=\"mr-5 mt-5 position-relative\"\n      as=\"li\"\n      border=\"secondary\"\n      onClick={() => handleClick(movie.id)}\n    >\n      <div className=\"hover-thing position-absolute\">\n        <div\n          className=\"text-left movie_overview p-3\"\n          style={{ overflowY: \"scroll\" }}\n        >\n          <strong>{movie.title}</strong> <br />\n          {movie.overview}\n        </div>\n      </div>\n      <Card.Img\n        variant=\"top\"\n        src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}?api_key=${API_KEY}`}\n        alt={`${movie.title} Poster`}\n      />\n\n      <Card.Footer className=\"footer-text\">\n        <Card.Text>\n          <strong>Rating: {movie.vote_average}/10 </strong>\n          <small>from {movie.vote_count} votes</small>\n        </Card.Text>\n        <hr />\n        <Card.Text>\n          <small>{movie.genre_ids[0]?.name}</small>\n        </Card.Text>\n        <Card.Text>\n          <strong>Released:</strong> {movie.release_date}\n        </Card.Text>\n      </Card.Footer>\n    </Card>\n  );\n};\n\nexport default MovieCard;\n","/Users/steph/IMDB/movie-app/src/components/MovieCarousel.js",["87"],"import React from \"react\";\nimport { Carousel, CarouselItem } from \"react-bootstrap\";\n\nconst MovieCarousel = ({ movies }) => {\n  // console.log(movies, \"hi\");\n  // console.log(`https://image.tmdb.org/t/p/w500/${movies[0].backdrop_path}`);\n  if (movies.length === 0) return <div>\"loading...\"</div>;\n  return (\n    <Carousel>\n      {movies[0] && (\n        <Carousel.Item>\n          <img\n            className=\"d-block w-100\"\n            src={`https://image.tmdb.org/t/p/w1280/${movies[0]?.backdrop_path}`}\n            alt=\"First slide\"\n          />\n          <Carousel.Caption>\n            <h3>{movies[0]?.title}</h3>\n            {/* <p>{movies[0].tagline}</p> */}\n          </Carousel.Caption>\n        </Carousel.Item>\n      )}\n      {movies[1] && (\n        <Carousel.Item>\n          <img\n            className=\"d-block w-100\"\n            src={`https://image.tmdb.org/t/p/w1280/${movies[1]?.backdrop_path}`}\n            alt=\"Third slide\"\n          />\n\n          <Carousel.Caption>\n            <h3>{movies[1]?.title}</h3>\n            {/* <p>{movies[1].tagline}</p> */}\n          </Carousel.Caption>\n        </Carousel.Item>\n      )}\n      {movies[2] && (\n        <Carousel.Item>\n          <img\n            className=\"d-block w-100\"\n            src={`https://image.tmdb.org/t/p/w1280/${movies[2]?.backdrop_path}`}\n            alt=\"Third slide\"\n          />\n\n          <Carousel.Caption>\n            <h3>{movies[2]?.title}</h3>\n            {/* <p>{movies[2].tagline}</p> */}\n          </Carousel.Caption>\n        </Carousel.Item>\n      )}\n      {movies[3] && (\n        <Carousel.Item>\n          <img\n            className=\"d-block w-100\"\n            src={`https://image.tmdb.org/t/p/w1280/${movies[3]?.backdrop_path}`}\n            alt=\"Third slide\"\n          />\n\n          <Carousel.Caption>\n            <h3>{movies[3]?.title}</h3>\n            {/* <p>{movies[2].tagline}</p> */}\n          </Carousel.Caption>\n        </Carousel.Item>\n      )}\n    </Carousel>\n  );\n};\n\nexport default MovieCarousel;\n","/Users/steph/IMDB/movie-app/src/pages/MovieDetails.js",["88"],"import React, { useEffect, useState } from \"react\";\nimport { Col, Container, Row } from \"react-bootstrap\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport api from \"../apiService\";\nimport ReactPlayer from \"react-player\";\nimport { PacmanLoader } from \"react-spinners\";\n\nconst API_KEY = \"da56a28f70258600c442ac848facc1e8\";\n// https://api.themoviedb.org/3/movie/550?api_key=da56a28f70258600c442ac848facc1e8&language=en-US\n\nconst MovieDetails = () => {\n  const params = useParams();\n  const [errorMsg, setErrorMsg] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [movie, setMovie] = useState([]);\n  const [videoInfo, setVideoInfo] = useState(\"\");\n  const [recsList, setRecsList] = useState([]);\n  const [isBgDark, setIsBgDark] = useState(false);\n\n  const history = useHistory();\n\n  const handleClick = (movieid) => {\n    history.push(`/movies/${movieid}`);\n  };\n\n  // console.log(\"LOKK\", params.id);\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      try {\n        const movieRes = await api.get(\n          `/movie/${params.id}?api_key=${API_KEY}&language=en-US`\n        );\n        console.log(\"movie\", movieRes.data);\n        setMovie(movieRes.data);\n\n        const videoResult = await api.get(\n          `/movie/${params.id}/videos?api_key=${API_KEY}`\n        );\n        console.log(\"videos\", videoResult.data.results);\n        setVideoInfo(videoResult.data.results[0]);\n\n        const recsRes = await api.get(\n          `/movie/${params.id}/recommendations?api_key=${API_KEY}&language=en-US`\n        );\n        console.log(\"recs\", recsRes.data.results);\n        setRecsList(recsRes.data.results);\n        setErrorMsg(\"\");\n      } catch (error) {\n        setErrorMsg(`FETCH ERROR: ${error.message}`);\n      }\n      setLoading(false);\n    };\n    fetchData();\n  }, [params]);\n\n  // console.log(\"details\", movie);\n  return (\n    <div\n      // style={{\n      //   backgroundColor: isBgDark ? \"#000\" : \"#fff\",\n      // }}\n      style={{\n        backgroundColor: \"#000\",\n        color: \"#fff\",\n        height: \"vh\",\n      }}\n    >\n      <Container className=\"d-flex text-center justify-content-center\">\n        {errorMsg && <div>{errorMsg}</div>}\n        <br />\n        {loading ? (\n          <div className=\"mt-5 pt-5\">\n            <PacmanLoader color=\"#FFFF00\" size={50} loading={true} />\n          </div>\n        ) : (\n          <div className=\"d-flex flex-wrap\">\n            {videoInfo?.key ? (\n              <div\n                className=\"player-wrapper\"\n                style={{ position: \"relative\", width: \"100vw\" }}\n              >\n                <ReactPlayer\n                  className=\"react-player\"\n                  style={{\n                    position: \"absolute\",\n                    marginLeft: \"auto\",\n                    marginRight: \"auto\",\n                    left: 0,\n                    right: 0,\n                  }}\n                  url={`https://www.youtube.com/watch?v=${videoInfo?.key}`}\n                  width=\"1280px\"\n                  height=\"720px\"\n                  onPlay={() => setIsBgDark(true)}\n                  onPause={() => setIsBgDark(false)}\n                />\n              </div>\n            ) : (\n              \"\"\n            )}\n            <br />\n            <Container>\n              <Row className=\"video-info\">\n                <Col>\n                  <h2>{videoInfo?.name}</h2>\n                </Col>\n              </Row>\n              <Row>\n                <Col>\n                  <h3>{movie?.tagline}</h3>\n                  <p>{movie?.overview}</p>\n                </Col>\n              </Row>\n            </Container>\n            <Container className=\"mt-5\">\n              <h2 className=\"recommend\">More like this:</h2>\n              <ul\n                className=\"list-unstyled d-flex justify-content-center zoom\"\n                style={{ overflowX: \"scroll\", overflowY: \"hidden\" }}\n              >\n                <br />\n                {recsList?.map((movie) => {\n                  return (\n                    <li>\n                      <img\n                        className=\"zoom\"\n                        height=\"200px\"\n                        variant=\"top\"\n                        src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}?api_key=${API_KEY}`}\n                        alt={`${movie.title} Poster`}\n                        onClick={() => handleClick(movie.id)}\n                      />\n                    </li>\n                  );\n                })}\n              </ul>\n            </Container>\n          </div>\n        )}\n      </Container>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","/Users/steph/IMDB/movie-app/src/pages/ShowingNow.js",[],"/Users/steph/IMDB/movie-app/src/pages/GenrePage.js",[],"/Users/steph/IMDB/movie-app/src/pages/UpcomingPage.js",[],"/Users/steph/IMDB/movie-app/src/components/useFetchData.js",["89","90"],"/Users/steph/IMDB/movie-app/src/components/Footer.js",[],"/Users/steph/IMDB/movie-app/src/pages/TopRated.js",[],"/Users/steph/IMDB/movie-app/src/pages/Query.js",["91","92","93"],{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","severity":1,"message":"99","line":20,"column":19,"nodeType":"100","messageId":"101","endLine":20,"endColumn":29},{"ruleId":"98","severity":1,"message":"102","line":23,"column":10,"nodeType":"100","messageId":"101","endLine":23,"endColumn":18},{"ruleId":"98","severity":1,"message":"103","line":4,"column":10,"nodeType":"100","messageId":"101","endLine":4,"endColumn":19},{"ruleId":"98","severity":1,"message":"104","line":4,"column":21,"nodeType":"100","messageId":"101","endLine":4,"endColumn":24},{"ruleId":"98","severity":1,"message":"105","line":5,"column":22,"nodeType":"100","messageId":"101","endLine":5,"endColumn":31},{"ruleId":"98","severity":1,"message":"106","line":28,"column":5,"nodeType":"100","messageId":"101","endLine":28,"endColumn":14},{"ruleId":"98","severity":1,"message":"107","line":2,"column":20,"nodeType":"100","messageId":"101","endLine":2,"endColumn":32},{"ruleId":"98","severity":1,"message":"108","line":18,"column":10,"nodeType":"100","messageId":"101","endLine":18,"endColumn":18},{"ruleId":"98","severity":1,"message":"109","line":1,"column":8,"nodeType":"100","messageId":"101","endLine":1,"endColumn":13},{"ruleId":"98","severity":1,"message":"110","line":8,"column":19,"nodeType":"100","messageId":"101","endLine":8,"endColumn":29},{"ruleId":"98","severity":1,"message":"105","line":5,"column":22,"nodeType":"100","messageId":"101","endLine":5,"endColumn":31},{"ruleId":"98","severity":1,"message":"111","line":7,"column":8,"nodeType":"100","messageId":"101","endLine":7,"endColumn":14},{"ruleId":"98","severity":1,"message":"112","line":25,"column":10,"nodeType":"100","messageId":"101","endLine":25,"endColumn":17},"no-native-reassign",["113"],"no-negated-in-lhs",["114"],"no-unused-vars","'setLoading' is assigned a value but never used.","Identifier","unusedVar","'errorMsg' is assigned a value but never used.","'Container' is defined but never used.","'Row' is defined but never used.","'useParams' is defined but never used.","'genreList' is assigned a value but never used.","'CarouselItem' is defined but never used.","'isBgDark' is assigned a value but never used.","'React' is defined but never used.","'setPageNum' is assigned a value but never used.","'Footer' is defined but never used.","'loading' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]